version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: master-order-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: master_order
      POSTGRES_USER: master_order_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
    volumes:
      - /mnt/user/appdata/master-order/postgres-data:/var/lib/postgresql/data
    networks:
      - master-order-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U master_order_user -d master_order"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  master-order:
    build: .
    container_name: master-order
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"
    volumes:
      # Persistent data storage - Updated paths for Unraid
      - /mnt/user/appdata/master-order/data:/app/data
      - /mnt/user/appdata/master-order/artwork-cache:/app/server/artwork-cache
      - /mnt/user/appdata/master-order/logs:/app/logs
      # Optional: Mount Plex media paths if running on same server
      # - /mnt/user/Media:/media:ro
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://master_order_user:${POSTGRES_PASSWORD:-secure_password_change_me}@postgres:5432/master_order
      - PORT=3001
      # Add your API keys and settings here or use a .env file
      # - PLEX_URL=http://your-plex-server:32400
      # - PLEX_TOKEN=your-plex-token
      # - TVDB_API_KEY=your-tvdb-api-key
      # - COMICVINE_API_KEY=your-comicvine-api-key
    networks:
      - master-order-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  master-order-network:
    driver: bridge

volumes:
  postgres-data:
  master-order-data:
  master-order-artwork:
  master-order-logs:
